s
fin
p cur
q
b main
r
n
n
s
p cur
q
b main
r
b sylar::Fiber::MainFunc
c
n
p cur
n
p cur
p *cur
p m_rootFiber
q
b main
r
n
s
n
p m_rootFiber
p *m_rootFiber
n
n
n
n
n
n
n
s
n
n
c
q
b main
r
b sylar::Fiber::swapOut
b sylar::Fiber::swapOut()
b sylar::Fiber::swapOUt()
c
p m_id
p this
p Scheduler::GetMainFiber()
n
n
n
n
n
p cur
q
r
bt
f 1-
f 10
l
p it
q
r
r
r
r
r
r
r
r
r
r
r
q
r
info threads
bt
f 1
c
q
r
q
set break pending on
b sylar::stop
r
r
q
set break pending on
b sylar::Scheduler::stop
r
n
p m_rootFiber
p m_threadCount
n
n
p m_activeThreadCount
q
set break pending on
b sylar::Fiber::YieldToHold
r
q
b main
r
b sylar::Fiber::YieldToHold
c
q
b sylar::Fiber::YieldToHold
b main
r
b sylar::Fiber::YieldToHold
c
p this
n
n
n
p cur
p *cur
n
p *cur
n
s
n
p cur
p *cur
p Scheduler::GetMainFiber()
p *Scheduler::GetMainFiber()
p t_fiber
p Scheduler::GetMainFiber
p *Scheduler::GetMainFiber()
p Scheduler::GetMainFiber()
p t_fiber
p *Scheduler::GetMainFiber()
p *t_fiber
q
r
p m_pendingEventCount
p m_pendingEventCount
bt
f 1
p m_pendingEventCount
n
n
p rt
p errno
p EINTR
n
n
n
q
b main
r
b stop
c
n
n
n
p m_rootFiber->getState()
b stopping
c
p this
n
n
b GetThis
c
c
n
n
n
p this
p sc
p iom
q
b main
r
b run
c
n
n
p this
n
n
n
n
p this
n
ni
q
r
q
r
info threads
thread 2
n
n
n
n
n
p fc
bt
f 1
l
n
n
n
p begin
p *begin
thread 1
l
bt 
f 2
l
heap
bins
parseheap
vmmap
q
r
bt
thread
info thread
bt
n
q
r
thread 2
n
q
r
bt
n
info thread
thread 2
n
q
r
bt
p this
q
r
c
n
info thread
thread 2
n
q
r
q
b main
b reset
r
c
p this
bt
q
